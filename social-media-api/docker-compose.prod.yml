version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: social-media-api-prod
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=${APP_URL:-http://localhost}
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=social_media_api
      - DB_USERNAME=laravel
      - DB_PASSWORD=${DB_PASSWORD}
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PASSPORT_PRIVATE_KEY_PATH=/var/www/html/storage/oauth-private.key
      - PASSPORT_PUBLIC_KEY_PATH=/var/www/html/storage/oauth-public.key
    volumes:
      - app_storage:/var/www/html/storage
      - app_logs:/var/log
    depends_on:
      - mysql
      - redis
    networks:
      - social-media-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mysql:
    image: mysql:8.0
    container_name: social-media-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: social_media_api
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: laravel
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - social-media-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: social-media-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - social-media-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: social-media-nginx-prod
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
      - app_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - social-media-network

networks:
  social-media-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_storage:
    driver: local
  app_logs:
    driver: local